name: PR Library

on:
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - "**.md"
      - "samples/**"
      - ".github/workflows/pr-samples.yml"

jobs:
  unit-tests:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        node-version:
          - 10
          - 12
          - 14
          - 16
          - 18
    runs-on: ${{ matrix.os }}
    name: Unit tests Node ${{ matrix.node-version }} on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          check-latest: true
      - name: Install dependencies
        run: npm install
      - name: Run unit tests
        run: npm test

  lint:
    runs-on: ubuntu-latest
    name: Lint SDK
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v2
      - name: Install dependencies
        run: npm install
      - name: Lint SDK
        run: npm run lint

  sonarcloud:
    needs: [unit-tests, lint]
    runs-on: ubuntu-latest
    name: Sonar Cloud Scan
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node
        uses: actions/setup-node@v2
      - name: Install dependencies
        run: npm install
      - name: Lint SDK
        run: npm run lint:ci
      - name: Upload ESLint results
        uses: actions/upload-artifact@v2
        with:
          name: lint-report
          path: lint
      - name: Run unit tests
        run: npm test
      - name: Upload code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: coverage
      - name: Resolve file paths for Sonar
        shell: bash
        run: |
          sed -i 's+/home/runner/work/sap-iot-sdk-nodejs/sap-iot-sdk-nodejs+/github/workspace+g' coverage/lcov.info
          sed -i 's+/home/runner/work/sap-iot-sdk-nodejs/sap-iot-sdk-nodejs+/github/workspace+g' lint/results.json
      - name: Extract application version
        id: app-version
        shell: bash
        run: |
          printf %"s\n" "Reading package.json from ./package.json"
          PACKAGE_VERSION=$(cat ./package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]')
          printf %"s\n" "Version is ${PACKAGE_VERSION}"
          echo ::set-output name=version::$PACKAGE_VERSION
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v1.6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: |
            -Dsonar.projectVersion=${{ steps.app-version.outputs.version}}

  integration-tests:
    needs: sonarcloud
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        node-version:
          - 10
          - 12
          - 14
          - 16
          - 18
    runs-on: ${{ matrix.os }}
    name: Integration tests Node ${{ matrix.node-version }} on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          check-latest: true
      - name: Install dependencies
        run: npm install
      - name: Run integration tests
        run: npm run test:integration
        env:
          VCAP_SERVICES: ${{ secrets.TENANT_CREDENTIALS_EU10_PLAYGROUND }}

  dependency-check:
    runs-on: ubuntu-latest
    name: Check SDK dependencies
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v2
      - name: Install dependencies
        run: npm install
      - name: Run dependency check
        run: npm run checkDependencies

  check-markdown-links:
    runs-on: ubuntu-latest
    name: Check for dead links in markdown documents
    steps:
      - uses: actions/checkout@v3
      - name: Run markdown link check
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          max-depth: 1
